/*Regla de css costa de 2 partes
1) el selector
2) bloque de declaraciones{
    atributo: valor;
    atributo-de-mas-de-dos-palabras: otro-valor;
}*/
/*la @import son mala practica porque soon bloqueantes a la hora de que el navegador lee esta instruccion*/
@import url("otra-hoja.css");

h1{
    color: orangered;
    background-color: black;
}

p {
    color: midnightblue;
}
/* dar estilos con id se considera un antipatron es decir una mala practica*/
#parrafo-dos {
    background-color: skyblue;
}

/*Dar estilos con clases nos permite reutilizar nuestro codigo CSS*/
.text-20{
    font-size: 20px;
}

.text-32{
    font-size: 32px;
}

.bg-steelblue {
    background-color: steelblue;
}

.bg-skyblue {
    background-color: skyblue;
}

.text-white {
    color: white;
}

.hijos-directos > li {
    background-color: thistle;
}

.hijos-descendientes b {
    background-color: thistle;
}

/* los selectores de hermanos van a aplicar a los elementos que son hermanos y 
que esten por debajo de los elementos de referencia*/
.hermanos-general ~ li {
    background-color: red;
}
    /*se aplica el estilo solamente al hermano que esta debajo pero solo uno */
.hermanos-adyacentes + li {
    background-color: thistle;
   }

/*selectores de atributos*/
.selectores-atributos a[href] {
    color: orangered;
}
.selectores-atributos a[target="_blank"]{
    font-weight: bold;
}

/* el comodin del * aplica al estilo si contiene la palabra en cuestion */
.selectores-atributos a[href*="jonmircha"]{
    font-size: 24px;
}

/*el circunflejo ^ indica que mi estilo se va a aplicar si el inicio del texto es el mismo */
.selectores-atributos a[href^="https"]{
    text-decoration: none;
}
/*El comodin del $ aplica al estilo si contiene el texto en cuestion*/
.selectores-atributos a[href$=".com"]{
    background-color: black;
}
 
/* el comodin del ~ aplica el estilo si contiene el texto en cuestion en una lista
separada por espacios*/
.selectores-atributos a[class~="cursos"]{
    background-color: steelblue;
}
/* el comodin del ~ aplica el estilo si contiene el texto en cuestion en una lista
separada por espacios y que despues del texto en cuestion venga un guion medio -*/
.selectores-atributos a[class|="menu"]{
    font-style: italic;
}

/* selector universal */

* {
    font-family: Georgia;
}

.selector-universal * {
    font-size: 24px;

}

.form-pseudoclases *:required{
    border-color: yellow;
}

.form-pseudoclases *:valid {
    border-color: green;
}

.form-pseudoclases *:invalid { 
    border-color: red;
}

.form-pseudoclases *:focus {
    background-color: skyblue;
}

.form-pseudoclases *:disabled {
    background-color: pink;
}

.menu-pseudoclases a:hover {
    color: orange;
}

.menu-pseudoclases a:visited { 
    color: olive;
}

.p-pseudoclases:hover {
    font-size: 20px;
}

#temario-css:target {
    background-color: lightgreen;
}

.lista-pseudoclases li:first-child {
    color: green;
}

.lista-pseudoclases li:last-child {
    color: violet;
}

.lista-pseudoclases li:nth-child(3) {
    color: navy;
}

.lista-pseudoclases li:nth-child(4n) {
    font-size: 20px;
}

.lista-pseudoclases li:nth-child(3n + 1) {
    font-weight: bold;
}

.lista-pseudoclases li:nth-child(even) {
    background-color: yellow;
}

.lista-pseudoclases li:nth-child(odd) {
    background-color: orange;
}

.articulo-pseudoclases p:first-of-type {
    background-color: pink;
}

.articulo-pseudoclases p:last-of-type {
    background-color: violet;
}

.articulo-pseudoclases p:nth-of-type(2) {
    background-color: fuchsia;
}

.articulo-pseudoclases *:not(p) {
    background-color: beige;
}

.saga-geminis::before {
    content: "ðŸ˜ƒ";
}

.saga-geminis::after {
    content: "ðŸŽ¨";
}

.saga-precio::before {
    content: "$";
    font-weight: bold;
}

.saga-precio::after {
    content: "usd";
    font-weight: bold;
}

.p-pseudoelementos::first-letter {
    font-weight: bold;
    font-size: 32px;
}

.p-pseudoelementos::first-line {
    color:coral;
}

.p-pseudoelementos::selection {
    color: greenyellow;
    background-color: black;
}

.input-pseudoelementos::placeholder {
    color: green;
}

/* Agrupar selectores*/
.form-agrupar-selectores input[type="email"],
.form-agrupar-selectores input[type="text"],
.form-agrupar-selectores textarea{
    border-color: yellow;
    background-color: black;
    border-style: dashed;
    border-width: 2px;
    font-size: 20px;
    display: block;
    width: 300px;
}








/*
Selectores Basicos
1) Etiquetas - son elementos html
2) Identificadores - atributo id-#
3) Clases - atributo class -.
*/

/*
El algoritmo de CSS: Es la forma en que el navegador aplica los 
estilos al documento HTML. Es vital entender este conepto para 
que entiendas como se aplican y en algunas ocasiones se sobreescriben 
las reglas CSS
1) La Cascada
2) La Especificidad
3) La Herencia
*/

/*
La Cascada es el mecanismo en que el navegador aplica los estilos. Y toma en cuenta lo
siguiente en este orden
1) El origen del codigo:
    El User Agent (los estilos por defectos del navegador)
    Personalizaciones del usuario
    Los estilos del autos
2) La Especificidad del selector
3) Orden de Aparicion
*/

/*
La especificidad es el peso que tiene un selector cuando hay conflicto de estilo. Se
calcula de la siguiente forma:
    Etiquetas y pseudoelementos -------------------0,0,0,1
    Clases, atributos y pseudoclases --------------0,0,1,0
    Identificadores--------------------------------0,1,0,0
    Estilos en lienea -----------------------------1,0,0,0
    Important-----------------------Rompe la especificidad

*/

/* La Herencia, es la capacidad de un selector de obtener(heredar) los valores de sus
ancestros mas cercanos, para aplicarla se usa el valor inherit, si queremos evitarla
podemos asignar otro valor o inicializr la propiedad en cuestion con el valor initial
